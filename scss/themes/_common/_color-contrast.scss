////
/// Voxpelli Color Contrast
/// Pure SASS script for calculating contrast ratios of colors. An adaption of Lea Verou's contrast-ratio javascript.
/// @see https://gist.github.com/voxpelli/6304812
/// @group Third Party
////


/// Adapted from: https://github.com/LeaVerou/contrast-ratio/blob/gh-pages/color.js
/// Formula: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
@function color_luminance($color) {
    $rgba: red($color), green($color), blue($color);
    $rgba2: ();

    @for $i from 1 through 3 {
        $rgb: nth($rgba, $i);
        $rgb: $rgb / 255;

        $rgb: if($rgb < .03928, $rgb / 12.92, pow(($rgb + .055) / 1.055, 2.4));

        $rgba2: append($rgba2, $rgb);
    }

    @return .2126 * nth($rgba2, 1) + .7152 * nth($rgba2, 2) + 0.0722 * nth($rgba2, 3);
}


/// Adapted from: https://github.com/LeaVerou/contrast-ratio/blob/gh-pages/color.js
/// Formula: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef
@function color_contrast($color1, $color2) {
    $luminance1: color_luminance($color1) + .05;
    $luminance2: color_luminance($color2) + .05;
    $ratio: $luminance1 / $luminance2;

    @if $luminance2 > $luminance1 {
        $ratio: 1 / $ratio;
    }

    $ratio: round($ratio * 10) / 10;

    @return $ratio;
}

@function pick_best_color($base, $colors, $tolerance: 0) {
    $contrast: color_contrast($base, nth($colors, 1));
    $best: nth($colors, 1);

    @for $i from 2 through length($colors) {
        $current_contrast: color_contrast($base, nth($colors, $i));
        @if ($current_contrast - $contrast > $tolerance) {
            $contrast: color_contrast($base, nth($colors, $i));
            $best: nth($colors, $i);
        }
    }

    @if ($contrast < 3) {
        @warn "Contrast ratio of #{$best} on #{$base} is pretty bad, just #{$contrast}";
    }

    @return $best;
}

/// Adapted from:  http://alienryderflex.com/hsp.html
/// calculate brightness
@function color_brightness($color) {

    $red: red($color);
    $green: green($color);
    $blue: blue($color);

    $brightness: nthRoot((pow($red, 2) * .241) + (pow($green, 2) * .691) + (pow($green, 2) * .068));

    @return $brightness * 100 / 256;
}
